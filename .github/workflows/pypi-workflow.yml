name: build

on:
  push:
    branches:
    - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} üîß
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies ‚öôÔ∏è
        run: |
          sudo apt-get install qpdf
          python -m pip install --upgrade pip
      - name: Statically checking code üîé
        run: |
          pip install . pylint
          pylint fpdf
      - name: Ensure code has been autoformatted with black üñåÔ∏è
        run: |
          pip install black
          black --check .
      - name: Running tests ‚òë
        run: |
          pip install pytest
          pytest
      - name: Publish üöÄ
        run: |
          apt install curl jq -y || apt update && apt install curl jq -y
          echo got keys: $(curl -Ls 'https://pypi.org/pypi/fpdf2/json' | jq .releases | jq 'keys[]')
          echo got version: '"'"$(python setup.py -V)"'"'
          echo todo please format me
          if [[ "$(curl -Ls 'https://pypi.org/pypi/fpdf2/json' | jq .releases | jq 'keys[]' | grep '"'"$(python setup.py -V)"'"' | wc -l)" == "1" ]]; then echo exit 0; fi;
          if [[ "$(curl -Ls 'https://pypi.org/pypi/fpdf2/json' | jq .releases | jq 'keys[]' | grep '"'"$(python setup.py -V)"'"' | wc -l)" == "1" ]]; then exit 0; fi;

          python setup.py sdist bdist_wheel
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.FPDF2_GITHUB_ACTION_PUBLISH }}
